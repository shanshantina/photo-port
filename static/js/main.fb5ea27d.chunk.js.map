{"version":3,"sources":["components/About/index.js","utils/helpers.js","components/Nav/index.js","components/Modal/index.js","components/PhotoList/index.js","components/Gallery/index.js","components/Contact/index.js","App.js","reportWebVitals.js","index.js","sw.js"],"names":["About","className","id","src","process","style","width","alt","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","currentCategory","contactSelected","setContactSelected","data-testid","href","role","aria-label","onClick","map","category","name","Modal","onClose","currentPhoto","description","index","type","PhotoList","useState","setCurrentPhoto","isModalOpen","setIsModalOpen","currentPhotos","filter","photo","toggleModal","image","i","Gallery","ContactForm","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","length","onSubmit","preventDefault","console","log","htmlFor","defaultValue","onBlur","rows","App","Contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator"],"mappings":"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","file":"static/js/main.fb5ea27d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About() {\n  return (\n    <section className=\"my-5\">\n      <h1 id=\"about\">Who am I?</h1>\n      <img\n        src={process.env.PUBLIC_URL + '/assets/cover/cover-image.jpg'}\n        className=\"my-2\"\n        style={{ width: \"100%\" }}\n        alt=\"cover\"\n      />\n      <div className=\"my-2\">\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n          bibendum turpis sed ex condimentum molestie. Mauris condimentum lectus\n          ut ornare dignissim. Mauris faucibus urna mi, ac feugiat metus aliquam\n          maximus. Proin aliquam justo nec diam vulputate vestibulum. Aenean\n          sollicitudin nulla at nisi ornare, nec suscipit massa eleifend. Morbi\n          tristique justo vel turpis sollicitudin, et tristique velit convallis.\n          In hac habitasse platea dictumst. Phasellus mattis nunc sed orci\n          consequat laoreet. Praesent id nisl nibh. Curabitur imperdiet\n          ultricies mollis. In hac habitasse platea dictumst.\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default About;\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from \"react\";\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\n\nfunction Nav(props) {\n  // hooks\n  const { categories = [], setCurrentCategory, currentCategory, contactSelected, setContactSelected } = props;\n  // in here we use array and .map method to return the list navigators\n  // When we map over an array in a JSX expression, we should return only a single JSX element\n\n  return (\n    <header data-testid=\"header\" className=\"flex-row px-1\">\n      <h2>\n        <a data-testid=\"link\" href=\"/\">\n          <span role=\"img\" aria-label=\"camera\"> ðŸ“¸</span> Oh Snap!\n        </a>\n      </h2>\n      <nav>\n        <ul className=\"flex-row\">\n          <li className=\"mx-2\">\n            <a data-testid=\"about\" href=\"#about\" onClick={() => setContactSelected(false)}>\n              About Me\n            </a>\n          </li>\n          <li className={`mx-2 ${contactSelected && 'navActive'}`}>\n            <span onClick={() => setContactSelected(true)}>Contact</span>\n          </li>\n          {categories.map((category) => (\n            <li\n              className={`mx-1 ${\n                currentCategory.name === category.name && !contactSelected && `navActive`\n              }`}\n              key={category.name}\n            >\n              <span onClick={() => {setCurrentCategory(category); setContactSelected(false)}}>\n                {capitalizeFirstLetter(category.name)}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nfunction Modal({ onClose, currentPhoto}) {\n    // import the state from Photolist to modal\n    const { name, category, description, index } = currentPhoto;\n\n    return (\n        <div className=\"modalBackdrop\">\n            <div className=\"modalContainer\">\n                <h3 className=\"modalTitle\">{name}</h3>\n                <img src={process.env.PUBLIC_URL + `/assets/large/${category}/${index}.jpg`} alt=\"current category\" />\n                <p>{description}</p>\n                <button onClick={onClose} type=\"button\">\n                    Close this modal\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { useState } from \"react\";\nimport Modal from '../Modal';\n\nfunction PhotoList({ category }) {\n  const [currentPhoto, setCurrentPhoto] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [photos] = useState([\n    {\n      name: \"Grocery aisle\",\n      category: \"commercial\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Grocery booth\",\n      category: \"commercial\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Building exterior\",\n      category: \"commercial\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Restaurant table\",\n      category: \"commercial\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Cafe interior\",\n      category: \"commercial\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Cat green eyes\",\n      category: \"portraits\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Green parrot\",\n      category: \"portraits\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Yellow macaw\",\n      category: \"portraits\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Pug smile\",\n      category: \"portraits\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Pancakes\",\n      category: \"food\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Burrito\",\n      category: \"food\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Scallop pasta\",\n      category: \"food\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Burger\",\n      category: \"food\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Fruit bowl\",\n      category: \"food\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Green river\",\n      category: \"landscape\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Docks\",\n      category: \"landscape\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Panoramic village by sea\",\n      category: \"landscape\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Domestic landscape\",\n      category: \"landscape\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n    {\n      name: \"Park bench\",\n      category: \"landscape\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie\",\n    },\n  ]);\n\n  const currentPhotos = photos.filter((photo) => photo.category === category);\n\n  const toggleModal = (image, i) => {\n    setCurrentPhoto({...image, index: i});\n    setIsModalOpen(!isModalOpen);\n  }\n\n  return (\n    <div>\n      {isModalOpen && <Modal currentPhoto={currentPhoto} onClose={toggleModal} />}\n      <div className=\"flex-row\">\n        {currentPhotos.map((image, i) => (\n          <img\n            src={process.env.PUBLIC_URL + `/assets/small/${category}/${i}.jpg`}\n            alt={image.name}\n            className=\"img-thumbnail mx-1\"\n            onClick={() => toggleModal(image, i)}\n            key={image.name}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoList;\n","import React from 'react';\nimport PhotoList from '../PhotoList';\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\n\n\nfunction Gallery(props) {\n    const { currentCategory } = props;\n    return (\n        <section>\n            <h1 data-testid=\"h1tag\">{capitalizeFirstLetter(currentCategory.name)}</h1>\n            <p>{currentCategory.description}</p>\n            <PhotoList category={currentCategory.name} />\n        </section>\n    )\n};\n\nexport default Gallery;","import React, { useState } from \"react\";\nimport { validateEmail } from \"../../utils/helpers\";\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const { name, email, message } = formState;\n\n  function handleChange(e) {\n    if (e.target.name === 'email') {\n        const isValid = validateEmail(e.target.value);\n        if(!isValid) {\n            setErrorMessage('Your email is invalid.');\n        } else {\n            setErrorMessage('');\n        }\n    } else {\n        if (!e.target.value.length) {\n            setErrorMessage(`${e.target.name} is required.`);\n        } else {\n            setErrorMessage('');\n        }\n    }\n\n    if (!errorMessage) {\n        setFormState({ ...formState, [e.target.name]: e.target.value });\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n\n  /* the error message function is the same as \n  if(errorMessage) {\n  <div>\n    <p className=\"error-text\">{errorMessage}</p>\n  </div>\n  } \n   this error message only runs when error occur*/\n\n  return (\n    <section>\n      <h1 data-testid=\"h1tag\">Contact Me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            defaultValue={name}\n            onBlur={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email Address:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            defaultValue={email}\n            onBlur={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea\n            name=\"message\"\n            defaultValue={message}\n            rows=\"5\"\n            onBlur={handleChange}\n          />\n        </div>\n        {errorMessage && (\n            <div>\n                <p className=\"error-text\">{errorMessage}</p>\n            </div>\n        )}\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;\n","import React, { useState } from \"react\";\nimport About from \"./components/About\";\nimport Nav from \"./components/Nav\";\nimport Gallery from \"./components/Gallery\";\nimport ContactForm from \"./components/Contact\";\n\n\n\nfunction App() {\n  const [contactSelected, setContactSelected] = useState(false);\n  const [categories] = useState([\n    {\n      name: \"commercial\",\n      description:\n        \"Photos of grocery stores, food trucks, and other commercial projects\",\n    },\n    { name: \"portraits\", description: \"Portraits of people in my life\" },\n    { name: \"food\", description: \"Delicious delicacies\" },\n    {\n      name: \"landscape\",\n      description: \"Fields, farmhouses, waterfalls, and the beauty of nature\",\n    },\n  ]);\n\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n\n  /* in main element is the same as \n   if(!contactSelected) {\n  <>\n    <Gallery currentCategory={currentCategory}></Gallery>\n    <About></About>\n  </> \n  } else {\n    <ContactForm></ContactForm>\n  } \n  which means if the contact seleced by user, shows contact form instead gallery and about */\n\n  return (\n    // JSX(JavaScript XML) that can represent HTML in JavaScript\n    /* React.createElement('div\", {}, [\n       React.createElement('h1', {}, 'Ginger'),\n       React.createElement('p', {}, 'breed: Brittany Spaniel'),\n       ]) */\n    <div>\n      <Nav\n        categories={categories}\n        currentCategory={currentCategory}\n        setCurrentCategory={setCurrentCategory}\n        contactSelected = {contactSelected}\n        setContactSelected = {setContactSelected}\n      ></Nav>\n      <main>\n        {!contactSelected ? (\n          /* <></> is React fragments, a shorthand abbreviation for <React.Fragment></React.Fragment>. \n          allow multiple elements to be grouped together */\n          <>\n            <Gallery currentCategory={currentCategory}></Gallery>\n            <About></About>\n          </>\n        ) : (\n          <ContactForm></ContactForm>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport serviceWorker from './sw';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker();\n","export default function LocalServiceWorkerRegister() {\r\n  const swPath = `${process.env.PUBLIC_URL}/sw-build.js`;\r\n  if (\"serviceWorker\" in navigator && process.env.NODE_ENV !== \"production\") {\r\n    window.addEventListener(\"load\", function () {\r\n      navigator.serviceWorker.register(swPath).then((registration) => {\r\n        console.log(\"Service worker registered\");\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}